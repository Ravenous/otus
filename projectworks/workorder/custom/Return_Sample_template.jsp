<$/////////////////////////////////////////////////////////////////////////////////////////////////////////
// The content of this template is intended to modified by developers to customize code generated by
// Orchestration Designer. Most of the code in this file is in standard JSP syntax except for a few spots 
// which would be pointed out by in-line comments.
// This template works for only the Return node.
// NOTE: if this file name has "Sample" in it, it is a parent template file for OD to use to generate working
//		templates. Don't touch it unless you want to change it for all the subsequently generated templates.
//
////////////////////////////////////////////////////////////////////////////////////////////////////////

// The $ tags used thoughout the JSP page is reserved for enclosing logic that the OD code generator processes. 
// Logic inside the tags works with the project properties configured at design time and apply them to the generated JSP page.
// Don't touch it unless you want to change the default behavior of how project properties apply to the JSP pages.
$>
<$ IForm form = (IForm)argument; 
	String theme = (String)form.getProperty("theme");
	String themeSwatch = (String)form.getProperty("swatch");
	if (themeSwatch == null){
		themeSwatch = "";
	}
	String[] cssFiles = (String[])form.getProperty("cssfiles");
	String[] jsFiles = (String[])form.getProperty("jsfiles");
	boolean useJquery = (boolean)form.getProperty("usejquery");
$>
<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ page import="com.avaya.sce.runtime.*, com.avaya.sce.runtime.html.genmodel.*, com.avaya.sce.runtimecommon.*, java.util.*" %>
<% response.addHeader("X-Frame-Options", "SAMEORIGIN"); %>
<!DOCTYPE html> 
<html> 
<head> 
	<title>End</title> 
	<meta name="viewport" content="width=device-width, initial-scale=1"> 
	 <$ for (String file : cssFiles){ $>
	<link rel="stylesheet" href="<$=file$>"/>
	<$}$>
	<link rel="stylesheet" href="css/avaya.css"/>
	<$ if (useJquery){ $>
	<script src="js/jquery.js"></script>
	<$ } $>
	<$ for (String file : jsFiles){ $>
	<script src="<$=file$>"></script>
	<$}$>
	<script src="js/avaya.js"></script>
	<$ if (useJquery){ $>
	<script src="js/jquery.mobile.avayamsg.js"></script>
	<script src="js/jquery.validate.js"></script>
	<$ } $>
</head> 
<body>
<%SCESession mySession = (SCESession)request.getAttribute("session");%>
<%//writePrompt
/////////////////////////////////////////////////////////////////////////////////////////////////////////
//		Jsp method to display prompt element dynamically. The way a prompt is displayed on the web
// 		page is all dictated by this method.
////////////////////////////////////////////////////////////////////////////////////////////////////////
%>
<%!
	private void writeElement(SCESession mySession, PromptElement element, JspWriter out) throws Exception{
		if (element.getType() == PromptElement.WEB_LOOP_VAR_COLL){
			PromptLoopElement loopElement = (PromptLoopElement)element;
			IVariable variable = mySession.getVariable(loopElement.getValue());
			ICollection collection = variable.getCollection();
			while(collection.hasMore()){
				for (PromptElement promptElem : loopElement.getChildren()){
					writeElement(mySession, promptElem, out);
				}
				collection.next();
			}
			for (PromptElement promptElem : loopElement.getChildren()){
				writeElement(mySession, promptElem, out);
			}
			collection.reset();
			collection.next();
		}
		if (element.getType() == PromptElement.HTMLTEXTELEMENT){
			out.println(element.getValue());
		}
		if (element.getType() == PromptElement.WEBELEMENT){
			String value = mySession.getVariableFieldValue(element.getValue());		
    		out.println("<label>" + element.getLabel() + "</label>");
   			if (element.getWebElemType().equals("Picture")){
   				value = element.getFileURLValue();
   				int width = element.getWidth();		   				
   				int height = element.getHeight();
   				if (width == 0 || height == 0){
   	    			out.println("<div><img src=\"" + value + "\"/></div>");
   	    		}else{
   	    			out.println("<div><img src=\"" + value + "\" width=\"" + width + "\" height=\"" + height + "\"/></div>");
   				}
   	    	} else if (element.getWebElemType().equals("Video")){
   	    		value = element.getFileURLValue();
   	    		int width = element.getWidth();		   				
   				int height = element.getHeight();
   				String controls = element.getAVControls();
   				if (width == 0 || height == 0){
   					out.println("<div><video " + controls + " src=\"" + value + "\"/></div>");
   				}else{
   					out.println("<div><video " + controls + " src=\"" + value + "\" width=\"" + width + "\" height=\"" + height + "\"/></div>");
   				}
   	    	} else if (element.getWebElemType().equals("Voice")){
   	    		value = element.getFileURLValue();
   	    		String controls = element.getAVControls();
   	    		out.println("<div><audio " + controls + " src=\"" + value + "\"/></div>");
   	    	} else if (element.getWebElemType().equals("Map") || element.getWebElemType().indexOf("Map") == 0){
   	    		String protocol = "http";
   	    		if (mySession.getRequest().isSecure()){
   	    			protocol = "https";
   	    		}
   	    		int width = element.getWidth();		   				
   				int height = element.getHeight();
   				if (width == 0) width = 400;
   				if (height == 0) height = 300;
   				String mapAPIKey = mySession.getParameter("mapAPIKey");
   				if (element.getWebElemType().contains("BAIDU")){   					
   					if (mapAPIKey != null && mapAPIKey.length() > 0){
   						mapAPIKey = "&ak=" + mapAPIKey;
   					}else{
   						mapAPIKey = "";
   					}
   					out.println("<div><img src=\"" + protocol + "://api.map.baidu.com/staticimage/v2?center=" + value + mapAPIKey + "&width=" + width + "&height=" + height + "&zoom=16&markers=" + value + "&markerStyles=-1," + protocol + "://api.map.baidu.com/images/marker_red.png\"/></div>");
   				}else if(element.getWebElemType().contains("OTHER")){
   					//For other map type, customers would have to customize the following code to make sure the static map url is generated according to 3rd party API docs.
   					if (mapAPIKey != null && mapAPIKey.length() > 0){
   						mapAPIKey = "&key=" + mapAPIKey;
   					}else{
   						mapAPIKey = "";
   					}
   					out.println("<div><img src=\"" + protocol + "://<domain>/<map url>?center=" + value + mapAPIKey + "&zoom=14&size=" + width + "x" + height + "&markers=color:red%7C" + value + "\"/></div>");   					
   				}else{
   					if (mapAPIKey != null && mapAPIKey.length() > 0){
   						mapAPIKey = "&key=" + mapAPIKey;
   					}else{
   						mapAPIKey = "";
   					}
   					out.println("<div><img src=\"" + protocol + "://maps.googleapis.com/maps/api/staticmap?center=" + value + mapAPIKey + "&zoom=14&size=" + width + "x" + height + "&markers=color:red%7C" + value + "\"/></div>");
   				}
   			} else if (element.getWebElemType().equals("Text")){
   	   			out.println("<input type=\"text\" value=\"" + value + "\" readonly/>");
   			} else if (element.getWebElemType().equals("TextArea")){
   				int width = element.getWidth();		   				
   				int height = element.getHeight();
   				out.println("<textarea rows=\"" + height + "\" cols=\"" + width + "\" readonly/>");
   				out.println(value);
   				out.println("</textarea>");
   			} 
		}
		if (element.getType() == PromptElement.VARIABLE_TEXT){
			String value = mySession.getVariableFieldValue(element.getValue());
			out.println(value);
		}
	}

	public void writePrompt(SCESession mySession, String promptName, TextDisplay.NameType type, JspWriter out) throws Exception{
		//Display prompt elements to show the input value dynamically
		List<PromptElement> elems = TextDisplay.getPromptElements(mySession, promptName, type);			
		for (PromptElement element : elems){
			writeElement(mySession, element, out);
   		}
	}
%>
<div data-role="page" data-theme="<$=themeSwatch$>">
	<div data-role="content" data-theme="<$=themeSwatch$>">
	<$ 
		// The logic below works with the flow node properties:
		// Graphic, Graphic Style, Title Message, Message Style
		String graphic = (String)form.getProperty(WebForm.PROP_GRAPHIC);
		String titleMsg = (String)form.getProperty(WebForm.PROP_TITLE_MSG);
		String graphicStyle =  (String)form.getProperty(WebForm.PROP_GRAPHIC_STYLE);
		if (graphicStyle.length() > 0){
			graphicStyle = "style=\"" + graphicStyle + "\"";
		}
		String titleMsgStyle = (String)form.getProperty(WebForm.PROP_TITLE_MSG_STYLE);
		if (titleMsgStyle.length() > 0){
			titleMsgStyle = "style=\"" + titleMsgStyle + "\"";
		}
		if (graphic != null && !graphic.equals("")){
	$>
		<div style=" text-align:center;margin-left:0 auto;margin-right:0 auto;">
			<img src="<$=graphic$>"/>
		</div>
		<br>
	<$}$>
	<$ if (titleMsg != null && !titleMsg.equals("")){ $>
		<p><$=titleMsg$></p>
		<br>
	<$}$>
	
	
	<% WebForm webForm = (WebForm)request.getAttribute("webform");
	for (IElement element : webForm.getElements()){
		if (element instanceof TextDisplay) {
			TextDisplay textDisplay = (TextDisplay) element;
			writePrompt(mySession, element.getName(), ((TextDisplay)element).getNameType(), out);
		}
	}
	%>
	
	</div><!-- /content -->
</div>
</body>
</html>
